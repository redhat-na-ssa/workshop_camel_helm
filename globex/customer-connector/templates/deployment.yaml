kind: Deployment
apiVersion: apps/v1
metadata:
  name: customer-connector
  labels:
    app.kubernetes.io/managed-by: quarkus
    app.kubernetes.io/name: customer-connector
    app.kubernetes.io/version: 1.0.0-SNAPSHOT
    app.openshift.io/runtime: quarkus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: customer-connector
      app.kubernetes.io/version: 1.0.0-SNAPSHOT
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.kubernetes.io/name: customer-connector
        app.kubernetes.io/version: 1.0.0-SNAPSHOT
        app.openshift.io/runtime: quarkus
    spec:
      containers:
        - resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: customer-connector
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: JAVA_APP_JAR
              value: /deployments/quarkus-run.jar
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          startupProbe:
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePolicy: File
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

